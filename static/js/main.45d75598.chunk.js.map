{"version":3,"sources":["App.js","serviceWorker.js","config.js","index.js"],"names":["layerTypes","alignments","transformRequest","url","hasQuery","indexOf","Chapter","id","theme","title","image","description","currentChapterID","bullets","classList","className","src","alt","App","props","state","currentChapter","chapters","config","this","mapStart","location","mapboxgl","accessToken","map","Map","container","mapContainer","style","center","zoom","pitch","bearing","marker","Marker","setLayerOpacity","layer","layerType","getLayer","type","console","log","getLayerPaintType","forEach","prop","setPaintProperty","opacity","showMarkers","setLngLat","addTo","setState","bind","scroller","scrollama","on","setup","step","offset","progress","onStepEnter","response","chapter","find","chap","element","flyTo","onChapterEnter","length","onStepExit","onChapterExit","window","addEventListener","resize","ref","el","subtitle","byline","alignment","key","footer","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45d75598.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport scrollama from 'scrollama';\n\nconst layerTypes = {\n    'fill': ['fill-opacity'],\n    'line': ['line-opacity'],\n    'circle': ['circle-opacity', 'circle-stroke-opacity'],\n    'symbol': ['icon-opacity', 'text-opacity'],\n    'raster': ['raster-opacity'],\n    'fill-extrusion': ['fill-extrusion-opacity']\n}\n\nconst alignments = {\n    'left': 'lefty',\n    'center': 'centered',\n    'right': 'righty'\n}\n\nconst transformRequest = (url) => {\n    const hasQuery = url.indexOf(\"?\") !== -1;\t  \n    const suffix = hasQuery ? \"&pluginName=journalismScrollytelling\" : \"?pluginName=journalismScrollytelling\";\t  \n    return {\n      url: url + suffix\n    }\t  \n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentChapter: props.chapters[0]\n        };\n        // this.setState = this.setState.bind(this);\n    }\n\n    componentDidMount() {\n        const config = this.props;\n        const mapStart = config.chapters[0].location;\n\n        mapboxgl.accessToken = config.accessToken;\n\n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: config.style,\n            center: mapStart.center,\n            zoom: mapStart.zoom,\n            pitch: mapStart.pitch,\n            bearing: mapStart.bearing,\n            transformRequest: transformRequest\n        });\n\n\n\n        //map marker in blue (currently disabled in config)\n        const marker = new mapboxgl.Marker();\n        if (config.showMarkers) {\n            marker.setLngLat(mapStart.center).addTo(map);\n        }\n\n        //returns data type of layer (line, fill, point etc.)\n        function getLayerPaintType(layer) {\n            var layerType = map.getLayer(layer).type;\n            console.log(\"layer type\", layerType);\n            return layerTypes[layerType];\n        }\n\n        //prop is the type of property to be adapted in opacity\n        function setLayerOpacity(layer) {\n            var paintProps = getLayerPaintType(layer.layer);\n            paintProps.forEach(function(prop) {\n                map.setPaintProperty(layer.layer, prop, layer.opacity); //change opacity\n            });\n        }\n\n        const setState = this.setState.bind(this);\n\n        // instantiate the scrollama\n        const scroller = scrollama();\n\n        map.on('load', function () {\n\n            // setup the instance, pass callback functions\n            scroller\n            .setup({\n                step: '.step',\n                offset: 0.5,\n                progress: true\n            })\n            .onStepEnter(response => {\n                const chapter = config.chapters.find(chap => chap.id === response.element.id);\n                setState({currentChapter:chapter});\n                map.flyTo(chapter.location);\n                if (config.showMarkers) {\n                    marker.setLngLat(chapter.location.center);\n                }\n                if (chapter.onChapterEnter.length > 0) {\n                    chapter.onChapterEnter.forEach(setLayerOpacity);\n                }\n            })\n            .onStepExit(response => {\n                var chapter = config.chapters.find(chap => chap.id === response.element.id);\n                if (chapter.onChapterExit.length > 0) {\n                    chapter.onChapterExit.forEach(setLayerOpacity);\n                }\n            });\n        });\n\n        window.addEventListener('resize', scroller.resize);\n    }\n\n    render() {\n        const config = this.props;\n        const theme = config.theme;\n        const currentChapterID = this.state.currentChapter.id;\n        return (\n            <div>\n                <div ref={el => this.mapContainer = el} className=\"absolute top right left bottom\" />\n                <div id=\"story\">\n                    {config.title &&\n                        <div id=\"header\" className={theme}>\n                            <h1>{config.title}</h1>\n                            {config.subtitle &&\n                                <h2>{config.subtitle}</h2>\n                            }\n                            {config.byline &&\n                                <p>{config.byline}</p>\n                            }\n                        </div>\n                    }\n                    <div id=\"features\" className={alignments[config.alignment]}>\n                        {\n                            config.chapters.map(chapter => \n                                <Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID}/>\n                            )\n                        }\n                    </div>\n                    {config.footer &&\n                        <div id=\"footer\" className={theme}>\n                            <p>{config.footer}</p>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction Chapter({id, theme, title, image, description, currentChapterID, bullets}) {\n    const classList = id === currentChapterID ? \"step active\" : \"step\";\n    return (\n        <div id={id} className={classList}>\n            <div className={theme}>\n                { title &&\n                    <h3 className=\"title\">{title}</h3>\n                }\n                { image &&\n                    <img src={image} alt={title}></img>\n                }\n                { description &&\n                    <p>{description}</p>\n                }\n                { bullets &&\n                    <ul>\n                        <li>{bullets}</li>\n                        <li>{bullets}</li>\n                        <li>{bullets}</li>\n                    </ul>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var zurich = [8.541694, 47.376888];\nvar sf = [-122.445327, 37.753683];\n\nvar config = {\n    style: 'mapbox://styles/imfeld/cke0ds9om1bky19oc8pg2yikq',\n    accessToken: 'pk.eyJ1IjoiaW1mZWxkIiwiYSI6ImNrZDk1Y2lmcDBzdGMycmx2NWhubnFjd2wifQ.LeVJDbIpVqOhpYeZwJk6mg',\n    showMarkers: false,\n    theme: 'light',\n    alignment: 'left',\n    title: 'The Title Text of this Story',\n    subtitle: 'A descriptive and interesting subtitle to draw in the reader',\n    byline: 'By a Digital Storyteller',\n    footer: 'Source: source citations, etc.',\n    chapters: [\n        {\n            id: 'slug-style-id',\n            title: 'The features to be evaluated',\n            image: './path/to/image/source.png',\n            bullets: 'ss',\n            description: 'dsfsdf',\n            location: {\n                center: sf,\n                zoom: 13.5,\n                pitch: 60,\n                bearing: 0\n            },\n            onChapterEnter: [\n                {\n                    layer: 'shapefiles-4haqhi',\n                    opacity: 1\n                }\n            ],\n            onChapterExit: [\n                {\n                    layer: 'shapefiles-4haqhi',\n                    opacity: 0\n                }\n            ]\n        },\n        {\n            id: 'other-identifier',\n            title: 'Second Title',\n            image: './path/to/image/source.png',\n            description: 'Copy these sections to add to your story.',\n            location: {\n                center: [-77.020636, 38.886900],\n                zoom: 13.5,\n                pitch: 60,\n                bearing: -43.2\n            },\n            onChapterEnter: [],\n            onChapterExit: []\n        }\n    ]\n};\n\nexport default config;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from './config.js';\n\n\n\nReactDOM.render(<App {...config}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}